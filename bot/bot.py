import asyncio
import logging
import sys
import os
from aiogram import Bot, Router, html, types, Dispatcher
from aiogram.types import FSInputFile, InputMediaPhoto
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties  # Import DefaultBotProperties
from aiogram.filters import CommandStart
from aiogram.types import Message
from bot import keyboad_bot
from bot.database import Database
from bot.settings.text import get_register_text
# 7867149117:AAFD3RAoLXmcvhcOrn4gdwjFX6ehmYPASqY
TOKEN = '7867149117:AAFD3RAoLXmcvhcOrn4gdwjFX6ehmYPASqY'
router = Router()
dp = Dispatcher()
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))  # Adjusted here

# Initialize the Database instance
db = None

def get_bot_object():
    global TOKEN
    bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    return bot

@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    if await db.check_user(message=message):
        await message.answer(get_register_text(message), reply_markup=keyboad_bot.start_kb(message))
        return None
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {html.bold(message.from_user.full_name)}! üëã\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª —Å–µ–∫–æ–Ω–¥-—Ö—ç–Ω–¥! –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∞—Ä—Ö–∏–≤–Ω—ã–µ –∏ –æ—Ç–±–æ—Ä–Ω—ã–µ –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –≤—ã–¥–µ–ª–∏—Ç—å—Å—è –∏–∑ —Ç–æ–ª–ø—ã. üåü –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–π—Ç–∏ —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ –¥–ª—è —Å–µ–±—è!", reply_markup=keyboad_bot.start_kb(message))

@router.message()
async def echo_handler(message: Message) -> None:
    is_registered = await db.check_user(message=message)
    if is_registered:
        await message.reply(get_register_text(message))
        return None
    
    # Fetch product data
    if message.text == '–¢–æ–≤–∞—Ä—ã':
        product = await db.next_button(message.from_user.id)
        if product:
            product = product[0]
            id = product['id']
            title = product['title']
            description = product['description'].replace('<br>', '\n')
            price = product['price']
            tags = ', '.join(tag['tag'] for tag in product['tags'])
            message_text = f"*{title}*\n\n{description}\n\n–¶–µ–Ω–∞: {price}‚ÇΩ\n\n–¢–µ–≥–∏: {tags}\n{id}"
            photo = product["photos"][0]
            photo_path = '.' + photo['image']
            input_file = FSInputFile(photo_path)
            keyboad = keyboad_bot.main_kb(message)
            await bot.send_photo(message.from_user.id, photo=input_file, caption=message_text, parse_mode='Markdown', reply_markup=keyboad)
    elif message.text == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç':
        text=f'''
        –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º:
                         
        –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã @nollieundergrob –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤—Å–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –∏–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @nollieundergrob.

        –í–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è @swaq11 –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∏–¥–µ–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –∏–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –∫–∞–∫–æ–π-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @swaq11.

        –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ @loytue568 –ø–æ–º–æ–≥–∞–µ—Ç —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–æ–≤ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ—Ü–µ—Å—Å–æ–º –∑–∞–∫–∞–∑–∞. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ —Å—Ç–∞—Ç—É—Å–µ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –∏–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–º–æ—á—å —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @loytue568.

        –ù–∞–¥–µ–µ–º—Å—è, —á—Ç–æ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ —Ä–µ—à–∏—Ç—å –ª—é–±—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç.'''
        await message.answer(text=text, reply_markup=keyboad_bot.start_kb(message))



@router.callback_query()
async def handle_button_click(callback_query: types.CallbackQuery):
    callback_data = callback_query.data
    message = callback_query.message
    id = message.message_id

    if callback_data == 'post_photo':
        photos = await db.get_photos(message, PackClass=FSInputFile)
        media = [InputMediaPhoto(media=i) for i in photos]
        await message.answer_media_group(media, reply_to_message_id=id)

    elif callback_data == 'next':
        product = await db.next_button(callback_query.from_user.id)
        if product:
            product = product[0]
            id = product['id']
            title = product['title']
            description = product['description'].replace('<br>', '\n')
            price = product['price']
            tags = ', '.join(tag['tag'] for tag in product['tags'])
            message_text = f"*{title}*\n\n{description}\n\n–¶–µ–Ω–∞: {price}‚ÇΩ\n\n–¢–µ–≥–∏: {tags}\n{id}"
            photo = product["photos"][0]
            photo_path = '.' + photo['image']
            input_file = FSInputFile(photo_path)
            keyboad = keyboad_bot.main_kb(message)
            await bot.send_photo(callback_query.from_user.id, photo=input_file, caption=message_text, parse_mode='Markdown', reply_markup=keyboad)

    elif callback_data == 'post_like':
        like = await db.like_product(callback_query)
        await message.reply("–£—á—Ç–µ–º –≤–∞—à –≤—ã–±–æ—Ä", reply_to_message_id=id)
    elif callback_data == 'post_contact':
        # await send_advert('—á–µ–∫–∞—é —Ä–∞—Å—Å—ã–ª–∫—É')
        await message.reply("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏",reply_to_message_id=id)
async def main() -> None:
    dp.include_router(router)
    await dp.start_polling(bot)

async def send_advert(message):
    peoples = await db.telegramid_to_list()
    for user in peoples:
        try:
            await bot.send_message(user, message, parse_mode='HTML')
        except:
            logging.info(f'{user} block the bot')

def start_bot(ip, port):
    global db
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    db = Database(f'{ip}:{port}')
    asyncio.run(main())

# Uncomment to run the bot
# if __name__ == "__main__":
#     start_bot('localhost', 8000)  # Adjust IP and port as needed

# send_advert('–ß–µ–∫–∞—é —Ä–∞—Å—Å—ã–ª–∫—É...')